import { ENUM_INTERCEPTOR_TOKENS } from "../enums";

export const INTERCEPTOR_TOKENS_TYPES = {
	// Prisma Client
	PRISMA_CLIENT_DB: Symbol.for(ENUM_INTERCEPTOR_TOKENS.PRISMA_CLIENT_DB),

	// Health Check
    HEALTHCHECK_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.HEALTHCHECK_USECASE),
    HEALTHCHECK_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.HEALTHCHECK_CONTROLLER),

	// MEDIA
	MEDIA_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.MEDIA_USECASE),
	MEDIA_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.MEDIA_REPO),
	MEDIA_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.MEDIA_CONTROLLER),
	MEDIA_FILE_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.MEDIA_FILE_USECASE),
	MEDIA_FILE_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.MEDIA_FILE_REPO),
	MEDIA_FILE_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.MEDIA_FILE_CONTROLLER),
	FILE_UPLOAD_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.FILE_UPLOAD_USECASE),
	FILE_UPLOAD_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.FILE_UPLOAD_CONTROLLER),

	// Currency
	CURRENCY_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.CURRRENCY_USECASE),
	CURRENCY_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.CURRENCY_REPO),
	CURRENCY_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.CURRENCY_CONTROLLER),

	// COUNTRY
	COUNTRY_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.COUNTRY_USECASE),
	COUNTRY_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.COUNTRY_REPO),
	COUNTRY_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.COUNTRY_CONTROLLER),

	// COMPANY
	COMPANY_CATEGORY_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.COMPANY_CATEGORY_USECASE),
	COMPANY_CATEGORY_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.COMPANY_CATEGORY_REPO),
	COMPANY_CATEGORY_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.COMPANY_CATEGORY_CONTROLLER),
	COMPANY_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.COMPANY_USECASE),
	COMPANY_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.COMPANY_REPO),
	COMPANY_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.COMPANY_CONTROLLER),
	MERCHANT_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.MERCHANT_USECASE),
	MERCHANT_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.MERCHANT_REPO),
	MERCHANT_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.MERCHANT_CONTROLLER),

	// ROLE
	ROLE_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.ROLE_USECASE),
	ROLE_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.ROLE_REPO),
	ROLE_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.ROLE_CONTROLLER),
	PERMISSION_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.PERMISSION_USECASE),
	PERMISSION_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.PERMISSION_REPO),
	PERMISSION_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.PERMISSION_CONTROLLER),
	RBAC_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.RBAC_USECASE),
	RBAC_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.RBAC_REPO),
	RBAC_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.RBAC_CONTROLLER),

	// AUTHENTICATE
	AUTH_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_USECASE),
    AUTH_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_CONTROLLER),
	AUTH_SSO_PROVIDER_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_SSO_PROVIDER_USECASE),
	AUTH_SSO_PROVIDER_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_SSO_PROVIDER_REPO),
	AUTH_SSO_PROVIDER_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_SSO_PROVIDER_CONTROLLER),
	AUTH_USER_LOGIN_TOKEN_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_USER_LOGIN_TOKEN_USECASE),
	AUTH_USER_LOGIN_TOKEN_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_USER_LOGIN_TOKEN_REPO),
	AUTH_USER_LOGIN_TOKEN_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_USER_LOGIN_TOKEN_CONTROLLER),
	AUTH_FORGET_PASSWORD_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_FORGET_PASSWORD_USECASE),
	AUTH_FORGET_PASSWORD_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_FORGET_PASSWORD_REPO),
	AUTH_FORGET_PASSWORD_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_FORGET_PASSWORD_CONTROLLER),
	AUTH_VERIFY_OTP_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_VERIFY_OTP_USECASE),
	AUTH_VERIFY_OTP_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_VERIFY_OTP_REPO),
	AUTH_VERIFY_OTP_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.AUTH_VERIFY_OTP_CONTROLLER),

	// USERS
	// Referral Code
	USER_REFERRAL_CODE_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_REFERRAL_CODE_USECASE),
	USER_REFERRAL_CODE_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_REFERRAL_CODE_REPO),
	USER_REFERRAL_CODE_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_REFERRAL_CODE_CONTROLLER),
	// User Setting
	USER_SETTING_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_SETTING_USECASE),
	USER_SETTING_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_SETTING_REPO),
	USER_SETTING_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_SETTING_CONTROLLER),
	// User Details
	USER_DETAIL_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_DETAIL_USECASE),
	USER_DETAIL_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_DETAIL_REPO),
	USER_DETAIL_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_DETAIL_CONTROLLER),
	// User
	USER_USECASE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_USECASE),
	USER_REPO: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_REPO),
	USER_CONTROLLER: Symbol.for(ENUM_INTERCEPTOR_TOKENS.USER_CONTROLLER),

	// NOTIFICATION
	// Notification Service
	NOTIFICATION_SERVICE: Symbol.for(ENUM_INTERCEPTOR_TOKENS.NOTIFICATION_SERVICE),
};
